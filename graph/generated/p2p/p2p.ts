// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BuyToken extends ethereum.Event {
  get params(): BuyToken__Params {
    return new BuyToken__Params(this);
  }
}

export class BuyToken__Params {
  _event: BuyToken;

  constructor(event: BuyToken) {
    this._event = event;
  }

  get buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get fromToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get toToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get boughtTokens(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get soldToken(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class CancelListing extends ethereum.Event {
  get params(): CancelListing__Params {
    return new CancelListing__Params(this);
  }
}

export class CancelListing__Params {
  _event: CancelListing;

  constructor(event: CancelListing) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get fromToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get toToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ListToken extends ethereum.Event {
  get params(): ListToken__Params {
    return new ListToken__Params(this);
  }
}

export class ListToken__Params {
  _event: ListToken;

  constructor(event: ListToken) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get fromToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get toToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get limit(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class p2p__getListingResultListingStruct extends ethereum.Tuple {
  get price(): BigInt {
    return this[0].toBigInt();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get limit(): BigInt {
    return this[2].toBigInt();
  }

  get seller(): Address {
    return this[3].toAddress();
  }
}

export class p2p extends ethereum.SmartContract {
  static bind(address: Address): p2p {
    return new p2p("p2p", address);
  }

  getListing(
    _seller: Address,
    _fromToken: Address,
    _toToken: Address
  ): p2p__getListingResultListingStruct {
    let result = super.call(
      "getListing",
      "getListing(address,address,address):((uint256,uint256,uint256,address))",
      [
        ethereum.Value.fromAddress(_seller),
        ethereum.Value.fromAddress(_fromToken),
        ethereum.Value.fromAddress(_toToken)
      ]
    );

    return changetype<p2p__getListingResultListingStruct>(result[0].toTuple());
  }

  try_getListing(
    _seller: Address,
    _fromToken: Address,
    _toToken: Address
  ): ethereum.CallResult<p2p__getListingResultListingStruct> {
    let result = super.tryCall(
      "getListing",
      "getListing(address,address,address):((uint256,uint256,uint256,address))",
      [
        ethereum.Value.fromAddress(_seller),
        ethereum.Value.fromAddress(_fromToken),
        ethereum.Value.fromAddress(_toToken)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<p2p__getListingResultListingStruct>(value[0].toTuple())
    );
  }
}

export class BuyTokenCall extends ethereum.Call {
  get inputs(): BuyTokenCall__Inputs {
    return new BuyTokenCall__Inputs(this);
  }

  get outputs(): BuyTokenCall__Outputs {
    return new BuyTokenCall__Outputs(this);
  }
}

export class BuyTokenCall__Inputs {
  _call: BuyTokenCall;

  constructor(call: BuyTokenCall) {
    this._call = call;
  }

  get _fromToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _toToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _seller(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BuyTokenCall__Outputs {
  _call: BuyTokenCall;

  constructor(call: BuyTokenCall) {
    this._call = call;
  }
}

export class CancelListingCall extends ethereum.Call {
  get inputs(): CancelListingCall__Inputs {
    return new CancelListingCall__Inputs(this);
  }

  get outputs(): CancelListingCall__Outputs {
    return new CancelListingCall__Outputs(this);
  }
}

export class CancelListingCall__Inputs {
  _call: CancelListingCall;

  constructor(call: CancelListingCall) {
    this._call = call;
  }

  get _fromToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _toToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CancelListingCall__Outputs {
  _call: CancelListingCall;

  constructor(call: CancelListingCall) {
    this._call = call;
  }
}

export class ListTokenCall extends ethereum.Call {
  get inputs(): ListTokenCall__Inputs {
    return new ListTokenCall__Inputs(this);
  }

  get outputs(): ListTokenCall__Outputs {
    return new ListTokenCall__Outputs(this);
  }
}

export class ListTokenCall__Inputs {
  _call: ListTokenCall;

  constructor(call: ListTokenCall) {
    this._call = call;
  }

  get _fromToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _toToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _limit(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class ListTokenCall__Outputs {
  _call: ListTokenCall;

  constructor(call: ListTokenCall) {
    this._call = call;
  }
}
